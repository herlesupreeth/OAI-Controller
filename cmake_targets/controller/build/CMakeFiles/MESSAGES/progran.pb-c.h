/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: progran.proto */

#ifndef PROTOBUF_C_progran_2eproto__INCLUDED
#define PROTOBUF_C_progran_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "stats_messages.pb-c.h"
#include "header.pb-c.h"
#include "time_common.pb-c.h"
#include "config_messages.pb-c.h"
#include "controller_commands.pb-c.h"
#include "control_delegation.pb-c.h"

typedef struct _Protocol__ProgranMessage Protocol__ProgranMessage;
typedef struct _Protocol__PrpHello Protocol__PrpHello;
typedef struct _Protocol__PrpEchoRequest Protocol__PrpEchoRequest;
typedef struct _Protocol__PrpEchoReply Protocol__PrpEchoReply;
typedef struct _Protocol__PrpStatsRequest Protocol__PrpStatsRequest;
typedef struct _Protocol__PrpStatsReply Protocol__PrpStatsReply;
typedef struct _Protocol__PrpSfTrigger Protocol__PrpSfTrigger;
typedef struct _Protocol__PrpUlSrInfo Protocol__PrpUlSrInfo;
typedef struct _Protocol__PrpEnbConfigRequest Protocol__PrpEnbConfigRequest;
typedef struct _Protocol__PrpEnbConfigReply Protocol__PrpEnbConfigReply;
typedef struct _Protocol__PrpUeConfigRequest Protocol__PrpUeConfigRequest;
typedef struct _Protocol__PrpUeConfigReply Protocol__PrpUeConfigReply;
typedef struct _Protocol__PrpLcConfigRequest Protocol__PrpLcConfigRequest;
typedef struct _Protocol__PrpLcConfigReply Protocol__PrpLcConfigReply;
typedef struct _Protocol__PrpDlMacConfig Protocol__PrpDlMacConfig;
typedef struct _Protocol__PrpUeStateChange Protocol__PrpUeStateChange;
typedef struct _Protocol__PrpControlDelegation Protocol__PrpControlDelegation;
typedef struct _Protocol__PrpEchoRequestLatency Protocol__PrpEchoRequestLatency;
typedef struct _Protocol__PrpEchoReplyLatency Protocol__PrpEchoReplyLatency;


/* --- enums --- */

typedef enum _Protocol__ProgranDirection {
  /*
   *option allow_alias = true;
   */
  PROTOCOL__PROGRAN_DIRECTION__NOT_SET = 0,
  PROTOCOL__PROGRAN_DIRECTION__INITIATING_MESSAGE = 1,
  PROTOCOL__PROGRAN_DIRECTION__SUCCESSFUL_OUTCOME = 2,
  PROTOCOL__PROGRAN_DIRECTION__UNSUCCESSFUL_OUTCOME = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTOCOL__PROGRAN_DIRECTION)
} Protocol__ProgranDirection;
typedef enum _Protocol__ProgranErr {
  /*
   *option allow_alias = true;
   * message errors
   */
  PROTOCOL__PROGRAN_ERR__NO_ERR = 0,
  PROTOCOL__PROGRAN_ERR__MSG_DEQUEUING = -1,
  PROTOCOL__PROGRAN_ERR__MSG_ENQUEUING = -2,
  PROTOCOL__PROGRAN_ERR__MSG_DECODING = -3,
  PROTOCOL__PROGRAN_ERR__MSG_ENCODING = -4,
  PROTOCOL__PROGRAN_ERR__MSG_BUILD = -5,
  PROTOCOL__PROGRAN_ERR__MSG_NOT_SUPPORTED = -6,
  PROTOCOL__PROGRAN_ERR__MSG_NOT_HANDLED = -7,
  PROTOCOL__PROGRAN_ERR__MSG_NOT_VALIDATED = -8,
  PROTOCOL__PROGRAN_ERR__MSG_OUT_DATED = -9,
  /*
   * other erros
   */
  PROTOCOL__PROGRAN_ERR__UNEXPECTED = -100
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTOCOL__PROGRAN_ERR)
} Protocol__ProgranErr;

/* --- messages --- */

typedef enum {
  PROTOCOL__PROGRAN_MESSAGE__MSG__NOT_SET = 0,
  PROTOCOL__PROGRAN_MESSAGE__MSG_HELLO_MSG = 1,
  PROTOCOL__PROGRAN_MESSAGE__MSG_ECHO_REQUEST_MSG = 2,
  PROTOCOL__PROGRAN_MESSAGE__MSG_ECHO_REPLY_MSG = 3,
  PROTOCOL__PROGRAN_MESSAGE__MSG_STATS_REQUEST_MSG = 4,
  PROTOCOL__PROGRAN_MESSAGE__MSG_STATS_REPLY_MSG = 5,
  PROTOCOL__PROGRAN_MESSAGE__MSG_SF_TRIGGER_MSG = 6,
  PROTOCOL__PROGRAN_MESSAGE__MSG_UL_SR_INFO_MSG = 7,
  PROTOCOL__PROGRAN_MESSAGE__MSG_ENB_CONFIG_REQUEST_MSG = 8,
  PROTOCOL__PROGRAN_MESSAGE__MSG_ENB_CONFIG_REPLY_MSG = 9,
  PROTOCOL__PROGRAN_MESSAGE__MSG_UE_CONFIG_REQUEST_MSG = 10,
  PROTOCOL__PROGRAN_MESSAGE__MSG_UE_CONFIG_REPLY_MSG = 11,
  PROTOCOL__PROGRAN_MESSAGE__MSG_LC_CONFIG_REQUEST_MSG = 12,
  PROTOCOL__PROGRAN_MESSAGE__MSG_LC_CONFIG_REPLY_MSG = 13,
  PROTOCOL__PROGRAN_MESSAGE__MSG_DL_MAC_CONFIG_MSG = 14,
  PROTOCOL__PROGRAN_MESSAGE__MSG_UE_STATE_CHANGE_MSG = 15,
  PROTOCOL__PROGRAN_MESSAGE__MSG_CONTROL_DELEGATION_MSG = 16,
} Protocol__ProgranMessage__MsgCase;

struct  _Protocol__ProgranMessage
{
  ProtobufCMessage base;
  protobuf_c_boolean has_msg_dir;
  Protocol__ProgranDirection msg_dir;
  Protocol__ProgranMessage__MsgCase msg_case;
  union {
    Protocol__PrpHello *hello_msg;
    Protocol__PrpEchoRequest *echo_request_msg;
    Protocol__PrpEchoReply *echo_reply_msg;
    Protocol__PrpStatsRequest *stats_request_msg;
    Protocol__PrpStatsReply *stats_reply_msg;
    Protocol__PrpSfTrigger *sf_trigger_msg;
    Protocol__PrpUlSrInfo *ul_sr_info_msg;
    Protocol__PrpEnbConfigRequest *enb_config_request_msg;
    Protocol__PrpEnbConfigReply *enb_config_reply_msg;
    Protocol__PrpUeConfigRequest *ue_config_request_msg;
    Protocol__PrpUeConfigReply *ue_config_reply_msg;
    Protocol__PrpLcConfigRequest *lc_config_request_msg;
    Protocol__PrpLcConfigReply *lc_config_reply_msg;
    Protocol__PrpDlMacConfig *dl_mac_config_msg;
    Protocol__PrpUeStateChange *ue_state_change_msg;
    Protocol__PrpControlDelegation *control_delegation_msg;
  };
};
#define PROTOCOL__PROGRAN_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__progran_message__descriptor) \
    , 0,0, PROTOCOL__PROGRAN_MESSAGE__MSG__NOT_SET, {0} }


struct  _Protocol__PrpHello
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
};
#define PROTOCOL__PRP_HELLO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_hello__descriptor) \
    , NULL }


struct  _Protocol__PrpEchoRequest
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
};
#define PROTOCOL__PRP_ECHO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_echo_request__descriptor) \
    , NULL }


struct  _Protocol__PrpEchoReply
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
};
#define PROTOCOL__PRP_ECHO_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_echo_reply__descriptor) \
    , NULL }


typedef enum {
  PROTOCOL__PRP_STATS_REQUEST__BODY__NOT_SET = 0,
  PROTOCOL__PRP_STATS_REQUEST__BODY_COMPLETE_STATS_REQUEST = 3,
  PROTOCOL__PRP_STATS_REQUEST__BODY_CELL_STATS_REQUEST = 4,
  PROTOCOL__PRP_STATS_REQUEST__BODY_UE_STATS_REQUEST = 5,
} Protocol__PrpStatsRequest__BodyCase;

struct  _Protocol__PrpStatsRequest
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  protobuf_c_boolean has_type;
  Protocol__PrpStatsType type;
  Protocol__PrpStatsRequest__BodyCase body_case;
  union {
    Protocol__PrpCompleteStatsRequest *complete_stats_request;
    Protocol__PrpCellStatsRequest *cell_stats_request;
    Protocol__PrpUeStatsRequest *ue_stats_request;
  };
};
#define PROTOCOL__PRP_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_stats_request__descriptor) \
    , NULL, 0,0, PROTOCOL__PRP_STATS_REQUEST__BODY__NOT_SET, {0} }


struct  _Protocol__PrpStatsReply
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  size_t n_ue_report;
  Protocol__PrpUeStatsReport **ue_report;
  size_t n_cell_report;
  Protocol__PrpCellStatsReport **cell_report;
};
#define PROTOCOL__PRP_STATS_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_stats_reply__descriptor) \
    , NULL, 0,NULL, 0,NULL }


struct  _Protocol__PrpSfTrigger
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  protobuf_c_boolean has_sfn_sf;
  uint32_t sfn_sf;
  size_t n_dl_info;
  Protocol__PrpDlInfo **dl_info;
  size_t n_ul_info;
  Protocol__PrpUlInfo **ul_info;
};
#define PROTOCOL__PRP_SF_TRIGGER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_sf_trigger__descriptor) \
    , NULL, 0,0, 0,NULL, 0,NULL }


struct  _Protocol__PrpUlSrInfo
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  protobuf_c_boolean has_sfn_sf;
  uint32_t sfn_sf;
  size_t n_rnti;
  uint32_t *rnti;
};
#define PROTOCOL__PRP_UL_SR_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_ul_sr_info__descriptor) \
    , NULL, 0,0, 0,NULL }


/*
 * eNB configuration messages
 */
struct  _Protocol__PrpEnbConfigRequest
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
};
#define PROTOCOL__PRP_ENB_CONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_enb_config_request__descriptor) \
    , NULL }


struct  _Protocol__PrpEnbConfigReply
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  /*
   * Unique id to distinguish the eNB
   */
  protobuf_c_boolean has_enb_id;
  uint32_t enb_id;
  size_t n_cell_config;
  Protocol__PrpCellConfig **cell_config;
};
#define PROTOCOL__PRP_ENB_CONFIG_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_enb_config_reply__descriptor) \
    , NULL, 0,0, 0,NULL }


struct  _Protocol__PrpUeConfigRequest
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
};
#define PROTOCOL__PRP_UE_CONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_ue_config_request__descriptor) \
    , NULL }


struct  _Protocol__PrpUeConfigReply
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  size_t n_ue_config;
  Protocol__PrpUeConfig **ue_config;
};
#define PROTOCOL__PRP_UE_CONFIG_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_ue_config_reply__descriptor) \
    , NULL, 0,NULL }


struct  _Protocol__PrpLcConfigRequest
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
};
#define PROTOCOL__PRP_LC_CONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_lc_config_request__descriptor) \
    , NULL }


struct  _Protocol__PrpLcConfigReply
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  size_t n_lc_ue_config;
  Protocol__PrpLcUeConfig **lc_ue_config;
};
#define PROTOCOL__PRP_LC_CONFIG_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_lc_config_reply__descriptor) \
    , NULL, 0,NULL }


struct  _Protocol__PrpDlMacConfig
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  protobuf_c_boolean has_sfn_sf;
  uint32_t sfn_sf;
  size_t n_dl_ue_data;
  Protocol__PrpDlData **dl_ue_data;
  size_t n_dl_rar;
  Protocol__PrpDlRar **dl_rar;
  size_t n_dl_broadcast;
  Protocol__PrpDlBroadcast **dl_broadcast;
  /*
   * OFDM symbol count for each CC
   */
  size_t n_ofdm_sym;
  Protocol__PrpPdcchOfdmSymCount **ofdm_sym;
};
#define PROTOCOL__PRP_DL_MAC_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_dl_mac_config__descriptor) \
    , NULL, 0,0, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _Protocol__PrpUeStateChange
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  /*
   * One of the PRUESC_* values
   */
  protobuf_c_boolean has_type;
  uint32_t type;
  /*
   * Body of the message (based on type)
   */
  Protocol__PrpUeConfig *config;
};
#define PROTOCOL__PRP_UE_STATE_CHANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_ue_state_change__descriptor) \
    , NULL, 0,0, NULL }


struct  _Protocol__PrpControlDelegation
{
  ProtobufCMessage base;
  Protocol__PrpHeader *header;
  /*
   * Bitmap of PRCDT_* flags
   */
  protobuf_c_boolean has_delegation_type;
  uint32_t delegation_type;
  /*
   * Byte array of shared lib containing the delegated functions
   */
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  /*
   * The delegated functions names ordered based on bitmap flags
   */
  size_t n_name;
  char **name;
};
#define PROTOCOL__PRP_CONTROL_DELEGATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_control_delegation__descriptor) \
    , NULL, 0,0, 0,{0,NULL}, 0,NULL }


/*
 * Extensions of the echo request and reply
 * messages for carrying a latency value in ms
 */
struct  _Protocol__PrpEchoRequestLatency
{
  ProtobufCMessage base;
};
#define PROTOCOL__PRP_ECHO_REQUEST_LATENCY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_echo_request_latency__descriptor) \
     }


struct  _Protocol__PrpEchoReplyLatency
{
  ProtobufCMessage base;
};
#define PROTOCOL__PRP_ECHO_REPLY_LATENCY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_echo_reply_latency__descriptor) \
     }


/* Protocol__ProgranMessage methods */
void   protocol__progran_message__init
                     (Protocol__ProgranMessage         *message);
size_t protocol__progran_message__get_packed_size
                     (const Protocol__ProgranMessage   *message);
size_t protocol__progran_message__pack
                     (const Protocol__ProgranMessage   *message,
                      uint8_t             *out);
size_t protocol__progran_message__pack_to_buffer
                     (const Protocol__ProgranMessage   *message,
                      ProtobufCBuffer     *buffer);
Protocol__ProgranMessage *
       protocol__progran_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__progran_message__free_unpacked
                     (Protocol__ProgranMessage *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpHello methods */
void   protocol__prp_hello__init
                     (Protocol__PrpHello         *message);
size_t protocol__prp_hello__get_packed_size
                     (const Protocol__PrpHello   *message);
size_t protocol__prp_hello__pack
                     (const Protocol__PrpHello   *message,
                      uint8_t             *out);
size_t protocol__prp_hello__pack_to_buffer
                     (const Protocol__PrpHello   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpHello *
       protocol__prp_hello__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_hello__free_unpacked
                     (Protocol__PrpHello *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpEchoRequest methods */
void   protocol__prp_echo_request__init
                     (Protocol__PrpEchoRequest         *message);
size_t protocol__prp_echo_request__get_packed_size
                     (const Protocol__PrpEchoRequest   *message);
size_t protocol__prp_echo_request__pack
                     (const Protocol__PrpEchoRequest   *message,
                      uint8_t             *out);
size_t protocol__prp_echo_request__pack_to_buffer
                     (const Protocol__PrpEchoRequest   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpEchoRequest *
       protocol__prp_echo_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_echo_request__free_unpacked
                     (Protocol__PrpEchoRequest *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpEchoReply methods */
void   protocol__prp_echo_reply__init
                     (Protocol__PrpEchoReply         *message);
size_t protocol__prp_echo_reply__get_packed_size
                     (const Protocol__PrpEchoReply   *message);
size_t protocol__prp_echo_reply__pack
                     (const Protocol__PrpEchoReply   *message,
                      uint8_t             *out);
size_t protocol__prp_echo_reply__pack_to_buffer
                     (const Protocol__PrpEchoReply   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpEchoReply *
       protocol__prp_echo_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_echo_reply__free_unpacked
                     (Protocol__PrpEchoReply *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpStatsRequest methods */
void   protocol__prp_stats_request__init
                     (Protocol__PrpStatsRequest         *message);
size_t protocol__prp_stats_request__get_packed_size
                     (const Protocol__PrpStatsRequest   *message);
size_t protocol__prp_stats_request__pack
                     (const Protocol__PrpStatsRequest   *message,
                      uint8_t             *out);
size_t protocol__prp_stats_request__pack_to_buffer
                     (const Protocol__PrpStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpStatsRequest *
       protocol__prp_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_stats_request__free_unpacked
                     (Protocol__PrpStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpStatsReply methods */
void   protocol__prp_stats_reply__init
                     (Protocol__PrpStatsReply         *message);
size_t protocol__prp_stats_reply__get_packed_size
                     (const Protocol__PrpStatsReply   *message);
size_t protocol__prp_stats_reply__pack
                     (const Protocol__PrpStatsReply   *message,
                      uint8_t             *out);
size_t protocol__prp_stats_reply__pack_to_buffer
                     (const Protocol__PrpStatsReply   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpStatsReply *
       protocol__prp_stats_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_stats_reply__free_unpacked
                     (Protocol__PrpStatsReply *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpSfTrigger methods */
void   protocol__prp_sf_trigger__init
                     (Protocol__PrpSfTrigger         *message);
size_t protocol__prp_sf_trigger__get_packed_size
                     (const Protocol__PrpSfTrigger   *message);
size_t protocol__prp_sf_trigger__pack
                     (const Protocol__PrpSfTrigger   *message,
                      uint8_t             *out);
size_t protocol__prp_sf_trigger__pack_to_buffer
                     (const Protocol__PrpSfTrigger   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpSfTrigger *
       protocol__prp_sf_trigger__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_sf_trigger__free_unpacked
                     (Protocol__PrpSfTrigger *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpUlSrInfo methods */
void   protocol__prp_ul_sr_info__init
                     (Protocol__PrpUlSrInfo         *message);
size_t protocol__prp_ul_sr_info__get_packed_size
                     (const Protocol__PrpUlSrInfo   *message);
size_t protocol__prp_ul_sr_info__pack
                     (const Protocol__PrpUlSrInfo   *message,
                      uint8_t             *out);
size_t protocol__prp_ul_sr_info__pack_to_buffer
                     (const Protocol__PrpUlSrInfo   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpUlSrInfo *
       protocol__prp_ul_sr_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_ul_sr_info__free_unpacked
                     (Protocol__PrpUlSrInfo *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpEnbConfigRequest methods */
void   protocol__prp_enb_config_request__init
                     (Protocol__PrpEnbConfigRequest         *message);
size_t protocol__prp_enb_config_request__get_packed_size
                     (const Protocol__PrpEnbConfigRequest   *message);
size_t protocol__prp_enb_config_request__pack
                     (const Protocol__PrpEnbConfigRequest   *message,
                      uint8_t             *out);
size_t protocol__prp_enb_config_request__pack_to_buffer
                     (const Protocol__PrpEnbConfigRequest   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpEnbConfigRequest *
       protocol__prp_enb_config_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_enb_config_request__free_unpacked
                     (Protocol__PrpEnbConfigRequest *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpEnbConfigReply methods */
void   protocol__prp_enb_config_reply__init
                     (Protocol__PrpEnbConfigReply         *message);
size_t protocol__prp_enb_config_reply__get_packed_size
                     (const Protocol__PrpEnbConfigReply   *message);
size_t protocol__prp_enb_config_reply__pack
                     (const Protocol__PrpEnbConfigReply   *message,
                      uint8_t             *out);
size_t protocol__prp_enb_config_reply__pack_to_buffer
                     (const Protocol__PrpEnbConfigReply   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpEnbConfigReply *
       protocol__prp_enb_config_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_enb_config_reply__free_unpacked
                     (Protocol__PrpEnbConfigReply *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpUeConfigRequest methods */
void   protocol__prp_ue_config_request__init
                     (Protocol__PrpUeConfigRequest         *message);
size_t protocol__prp_ue_config_request__get_packed_size
                     (const Protocol__PrpUeConfigRequest   *message);
size_t protocol__prp_ue_config_request__pack
                     (const Protocol__PrpUeConfigRequest   *message,
                      uint8_t             *out);
size_t protocol__prp_ue_config_request__pack_to_buffer
                     (const Protocol__PrpUeConfigRequest   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpUeConfigRequest *
       protocol__prp_ue_config_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_ue_config_request__free_unpacked
                     (Protocol__PrpUeConfigRequest *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpUeConfigReply methods */
void   protocol__prp_ue_config_reply__init
                     (Protocol__PrpUeConfigReply         *message);
size_t protocol__prp_ue_config_reply__get_packed_size
                     (const Protocol__PrpUeConfigReply   *message);
size_t protocol__prp_ue_config_reply__pack
                     (const Protocol__PrpUeConfigReply   *message,
                      uint8_t             *out);
size_t protocol__prp_ue_config_reply__pack_to_buffer
                     (const Protocol__PrpUeConfigReply   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpUeConfigReply *
       protocol__prp_ue_config_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_ue_config_reply__free_unpacked
                     (Protocol__PrpUeConfigReply *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpLcConfigRequest methods */
void   protocol__prp_lc_config_request__init
                     (Protocol__PrpLcConfigRequest         *message);
size_t protocol__prp_lc_config_request__get_packed_size
                     (const Protocol__PrpLcConfigRequest   *message);
size_t protocol__prp_lc_config_request__pack
                     (const Protocol__PrpLcConfigRequest   *message,
                      uint8_t             *out);
size_t protocol__prp_lc_config_request__pack_to_buffer
                     (const Protocol__PrpLcConfigRequest   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpLcConfigRequest *
       protocol__prp_lc_config_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_lc_config_request__free_unpacked
                     (Protocol__PrpLcConfigRequest *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpLcConfigReply methods */
void   protocol__prp_lc_config_reply__init
                     (Protocol__PrpLcConfigReply         *message);
size_t protocol__prp_lc_config_reply__get_packed_size
                     (const Protocol__PrpLcConfigReply   *message);
size_t protocol__prp_lc_config_reply__pack
                     (const Protocol__PrpLcConfigReply   *message,
                      uint8_t             *out);
size_t protocol__prp_lc_config_reply__pack_to_buffer
                     (const Protocol__PrpLcConfigReply   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpLcConfigReply *
       protocol__prp_lc_config_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_lc_config_reply__free_unpacked
                     (Protocol__PrpLcConfigReply *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpDlMacConfig methods */
void   protocol__prp_dl_mac_config__init
                     (Protocol__PrpDlMacConfig         *message);
size_t protocol__prp_dl_mac_config__get_packed_size
                     (const Protocol__PrpDlMacConfig   *message);
size_t protocol__prp_dl_mac_config__pack
                     (const Protocol__PrpDlMacConfig   *message,
                      uint8_t             *out);
size_t protocol__prp_dl_mac_config__pack_to_buffer
                     (const Protocol__PrpDlMacConfig   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpDlMacConfig *
       protocol__prp_dl_mac_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_dl_mac_config__free_unpacked
                     (Protocol__PrpDlMacConfig *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpUeStateChange methods */
void   protocol__prp_ue_state_change__init
                     (Protocol__PrpUeStateChange         *message);
size_t protocol__prp_ue_state_change__get_packed_size
                     (const Protocol__PrpUeStateChange   *message);
size_t protocol__prp_ue_state_change__pack
                     (const Protocol__PrpUeStateChange   *message,
                      uint8_t             *out);
size_t protocol__prp_ue_state_change__pack_to_buffer
                     (const Protocol__PrpUeStateChange   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpUeStateChange *
       protocol__prp_ue_state_change__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_ue_state_change__free_unpacked
                     (Protocol__PrpUeStateChange *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpControlDelegation methods */
void   protocol__prp_control_delegation__init
                     (Protocol__PrpControlDelegation         *message);
size_t protocol__prp_control_delegation__get_packed_size
                     (const Protocol__PrpControlDelegation   *message);
size_t protocol__prp_control_delegation__pack
                     (const Protocol__PrpControlDelegation   *message,
                      uint8_t             *out);
size_t protocol__prp_control_delegation__pack_to_buffer
                     (const Protocol__PrpControlDelegation   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpControlDelegation *
       protocol__prp_control_delegation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_control_delegation__free_unpacked
                     (Protocol__PrpControlDelegation *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpEchoRequestLatency methods */
void   protocol__prp_echo_request_latency__init
                     (Protocol__PrpEchoRequestLatency         *message);
size_t protocol__prp_echo_request_latency__get_packed_size
                     (const Protocol__PrpEchoRequestLatency   *message);
size_t protocol__prp_echo_request_latency__pack
                     (const Protocol__PrpEchoRequestLatency   *message,
                      uint8_t             *out);
size_t protocol__prp_echo_request_latency__pack_to_buffer
                     (const Protocol__PrpEchoRequestLatency   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpEchoRequestLatency *
       protocol__prp_echo_request_latency__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_echo_request_latency__free_unpacked
                     (Protocol__PrpEchoRequestLatency *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpEchoReplyLatency methods */
void   protocol__prp_echo_reply_latency__init
                     (Protocol__PrpEchoReplyLatency         *message);
size_t protocol__prp_echo_reply_latency__get_packed_size
                     (const Protocol__PrpEchoReplyLatency   *message);
size_t protocol__prp_echo_reply_latency__pack
                     (const Protocol__PrpEchoReplyLatency   *message,
                      uint8_t             *out);
size_t protocol__prp_echo_reply_latency__pack_to_buffer
                     (const Protocol__PrpEchoReplyLatency   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpEchoReplyLatency *
       protocol__prp_echo_reply_latency__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_echo_reply_latency__free_unpacked
                     (Protocol__PrpEchoReplyLatency *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protocol__ProgranMessage_Closure)
                 (const Protocol__ProgranMessage *message,
                  void *closure_data);
typedef void (*Protocol__PrpHello_Closure)
                 (const Protocol__PrpHello *message,
                  void *closure_data);
typedef void (*Protocol__PrpEchoRequest_Closure)
                 (const Protocol__PrpEchoRequest *message,
                  void *closure_data);
typedef void (*Protocol__PrpEchoReply_Closure)
                 (const Protocol__PrpEchoReply *message,
                  void *closure_data);
typedef void (*Protocol__PrpStatsRequest_Closure)
                 (const Protocol__PrpStatsRequest *message,
                  void *closure_data);
typedef void (*Protocol__PrpStatsReply_Closure)
                 (const Protocol__PrpStatsReply *message,
                  void *closure_data);
typedef void (*Protocol__PrpSfTrigger_Closure)
                 (const Protocol__PrpSfTrigger *message,
                  void *closure_data);
typedef void (*Protocol__PrpUlSrInfo_Closure)
                 (const Protocol__PrpUlSrInfo *message,
                  void *closure_data);
typedef void (*Protocol__PrpEnbConfigRequest_Closure)
                 (const Protocol__PrpEnbConfigRequest *message,
                  void *closure_data);
typedef void (*Protocol__PrpEnbConfigReply_Closure)
                 (const Protocol__PrpEnbConfigReply *message,
                  void *closure_data);
typedef void (*Protocol__PrpUeConfigRequest_Closure)
                 (const Protocol__PrpUeConfigRequest *message,
                  void *closure_data);
typedef void (*Protocol__PrpUeConfigReply_Closure)
                 (const Protocol__PrpUeConfigReply *message,
                  void *closure_data);
typedef void (*Protocol__PrpLcConfigRequest_Closure)
                 (const Protocol__PrpLcConfigRequest *message,
                  void *closure_data);
typedef void (*Protocol__PrpLcConfigReply_Closure)
                 (const Protocol__PrpLcConfigReply *message,
                  void *closure_data);
typedef void (*Protocol__PrpDlMacConfig_Closure)
                 (const Protocol__PrpDlMacConfig *message,
                  void *closure_data);
typedef void (*Protocol__PrpUeStateChange_Closure)
                 (const Protocol__PrpUeStateChange *message,
                  void *closure_data);
typedef void (*Protocol__PrpControlDelegation_Closure)
                 (const Protocol__PrpControlDelegation *message,
                  void *closure_data);
typedef void (*Protocol__PrpEchoRequestLatency_Closure)
                 (const Protocol__PrpEchoRequestLatency *message,
                  void *closure_data);
typedef void (*Protocol__PrpEchoReplyLatency_Closure)
                 (const Protocol__PrpEchoReplyLatency *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    protocol__progran_direction__descriptor;
extern const ProtobufCEnumDescriptor    protocol__progran_err__descriptor;
extern const ProtobufCMessageDescriptor protocol__progran_message__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_hello__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_echo_request__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_echo_reply__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_stats_request__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_stats_reply__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_sf_trigger__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_ul_sr_info__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_enb_config_request__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_enb_config_reply__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_ue_config_request__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_ue_config_reply__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_lc_config_request__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_lc_config_reply__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_dl_mac_config__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_ue_state_change__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_control_delegation__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_echo_request_latency__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_echo_reply_latency__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_progran_2eproto__INCLUDED */
