/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: controller_commands.proto */

#ifndef PROTOBUF_C_controller_5fcommands_2eproto__INCLUDED
#define PROTOBUF_C_controller_5fcommands_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "mac_primitives.pb-c.h"

typedef struct _Protocol__PrpDlData Protocol__PrpDlData;
typedef struct _Protocol__PrpDlRar Protocol__PrpDlRar;
typedef struct _Protocol__PrpDlBroadcast Protocol__PrpDlBroadcast;
typedef struct _Protocol__PrpPdcchOfdmSymCount Protocol__PrpPdcchOfdmSymCount;


/* --- enums --- */

typedef enum _Protocol__PrpBroadcastType {
  PROTOCOL__PRP_BROADCAST_TYPE__PRBT_BCCH = 0,
  PROTOCOL__PRP_BROADCAST_TYPE__PRBT_PCCH = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTOCOL__PRP_BROADCAST_TYPE)
} Protocol__PrpBroadcastType;

/* --- messages --- */

struct  _Protocol__PrpDlData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rnti;
  uint32_t rnti;
  Protocol__PrpDlDci *dl_dci;
  /*
   * list of 2 MAC CEs, one for each TB
   */
  size_t n_ce_bitmap;
  uint32_t *ce_bitmap;
  /*
   * list of parameters for the creation of RLC PDUs. One for each lcid
   */
  size_t n_rlc_pdu;
  Protocol__PrpRlcPdu **rlc_pdu;
  protobuf_c_boolean has_serv_cell_index;
  uint32_t serv_cell_index;
  /*
   *Hex content of MAC CE for Activation/Deactivation in CA
   */
  protobuf_c_boolean has_act_deact_ce;
  uint32_t act_deact_ce;
};
#define PROTOCOL__PRP_DL_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_dl_data__descriptor) \
    , 0,0, NULL, 0,NULL, 0,NULL, 0,0, 0,0 }


/*
 * Body of the RAR scheduler configuration
 */
struct  _Protocol__PrpDlRar
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rnti;
  uint32_t rnti;
  /*
   * The 20-bit UL grant. TS 36.213, sec 6.2
   */
  protobuf_c_boolean has_grant;
  uint32_t grant;
  Protocol__PrpDlDci *rar_dci;
  /*
   * The carrier index for the RAR
   */
  protobuf_c_boolean has_carrier_index;
  uint32_t carrier_index;
};
#define PROTOCOL__PRP_DL_RAR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_dl_rar__descriptor) \
    , 0,0, 0,0, NULL, 0,0 }


struct  _Protocol__PrpDlBroadcast
{
  ProtobufCMessage base;
  /*
   * The PRBT_* values
   */
  protobuf_c_boolean has_type;
  uint32_t type;
  /*
   * Index of the broadcast message:
   */
  protobuf_c_boolean has_index;
  uint32_t index;
  /*
   * 0 - SIB1,
   * 1..31 - Six,
   * 32..63 - PCCH (PCCH index obtained from  prp_paging_info)
   */
  Protocol__PrpDlDci *broad_dci;
  /*
   * Index of the carrier for broadcast
   */
  protobuf_c_boolean has_carrier_index;
  uint32_t carrier_index;
};
#define PROTOCOL__PRP_DL_BROADCAST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_dl_broadcast__descriptor) \
    , 0,0, 0,0, NULL, 0,0 }


struct  _Protocol__PrpPdcchOfdmSymCount
{
  ProtobufCMessage base;
  protobuf_c_boolean has_carrier_index;
  uint32_t carrier_index;
  protobuf_c_boolean has_num_pdcch_ofdm_symbols;
  uint32_t num_pdcch_ofdm_symbols;
};
#define PROTOCOL__PRP_PDCCH_OFDM_SYM_COUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_pdcch_ofdm_sym_count__descriptor) \
    , 0,0, 0,0 }


/* Protocol__PrpDlData methods */
void   protocol__prp_dl_data__init
                     (Protocol__PrpDlData         *message);
size_t protocol__prp_dl_data__get_packed_size
                     (const Protocol__PrpDlData   *message);
size_t protocol__prp_dl_data__pack
                     (const Protocol__PrpDlData   *message,
                      uint8_t             *out);
size_t protocol__prp_dl_data__pack_to_buffer
                     (const Protocol__PrpDlData   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpDlData *
       protocol__prp_dl_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_dl_data__free_unpacked
                     (Protocol__PrpDlData *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpDlRar methods */
void   protocol__prp_dl_rar__init
                     (Protocol__PrpDlRar         *message);
size_t protocol__prp_dl_rar__get_packed_size
                     (const Protocol__PrpDlRar   *message);
size_t protocol__prp_dl_rar__pack
                     (const Protocol__PrpDlRar   *message,
                      uint8_t             *out);
size_t protocol__prp_dl_rar__pack_to_buffer
                     (const Protocol__PrpDlRar   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpDlRar *
       protocol__prp_dl_rar__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_dl_rar__free_unpacked
                     (Protocol__PrpDlRar *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpDlBroadcast methods */
void   protocol__prp_dl_broadcast__init
                     (Protocol__PrpDlBroadcast         *message);
size_t protocol__prp_dl_broadcast__get_packed_size
                     (const Protocol__PrpDlBroadcast   *message);
size_t protocol__prp_dl_broadcast__pack
                     (const Protocol__PrpDlBroadcast   *message,
                      uint8_t             *out);
size_t protocol__prp_dl_broadcast__pack_to_buffer
                     (const Protocol__PrpDlBroadcast   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpDlBroadcast *
       protocol__prp_dl_broadcast__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_dl_broadcast__free_unpacked
                     (Protocol__PrpDlBroadcast *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpPdcchOfdmSymCount methods */
void   protocol__prp_pdcch_ofdm_sym_count__init
                     (Protocol__PrpPdcchOfdmSymCount         *message);
size_t protocol__prp_pdcch_ofdm_sym_count__get_packed_size
                     (const Protocol__PrpPdcchOfdmSymCount   *message);
size_t protocol__prp_pdcch_ofdm_sym_count__pack
                     (const Protocol__PrpPdcchOfdmSymCount   *message,
                      uint8_t             *out);
size_t protocol__prp_pdcch_ofdm_sym_count__pack_to_buffer
                     (const Protocol__PrpPdcchOfdmSymCount   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpPdcchOfdmSymCount *
       protocol__prp_pdcch_ofdm_sym_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_pdcch_ofdm_sym_count__free_unpacked
                     (Protocol__PrpPdcchOfdmSymCount *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protocol__PrpDlData_Closure)
                 (const Protocol__PrpDlData *message,
                  void *closure_data);
typedef void (*Protocol__PrpDlRar_Closure)
                 (const Protocol__PrpDlRar *message,
                  void *closure_data);
typedef void (*Protocol__PrpDlBroadcast_Closure)
                 (const Protocol__PrpDlBroadcast *message,
                  void *closure_data);
typedef void (*Protocol__PrpPdcchOfdmSymCount_Closure)
                 (const Protocol__PrpPdcchOfdmSymCount *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    protocol__prp_broadcast_type__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_dl_data__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_dl_rar__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_dl_broadcast__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_pdcch_ofdm_sym_count__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_controller_5fcommands_2eproto__INCLUDED */
