/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: time_common.proto */

#ifndef PROTOBUF_C_time_5fcommon_2eproto__INCLUDED
#define PROTOBUF_C_time_5fcommon_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Protocol__PrpDlInfo Protocol__PrpDlInfo;
typedef struct _Protocol__PrpUlInfo Protocol__PrpUlInfo;


/* --- enums --- */

typedef enum _Protocol__PrpHarqStatus {
  PROTOCOL__PRP_HARQ_STATUS__PRHS_ACK = 0,
  PROTOCOL__PRP_HARQ_STATUS__PRHS_NACK = 1,
  PROTOCOL__PRP_HARQ_STATUS__PRHS_DTX = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTOCOL__PRP_HARQ_STATUS)
} Protocol__PrpHarqStatus;
typedef enum _Protocol__PrpReceptionStatus {
  PROTOCOL__PRP_RECEPTION_STATUS__PRRS_OK = 0,
  PROTOCOL__PRP_RECEPTION_STATUS__PRRS_NOT_OK = 1,
  PROTOCOL__PRP_RECEPTION_STATUS__PRRS_NOT_VALID = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTOCOL__PRP_RECEPTION_STATUS)
} Protocol__PrpReceptionStatus;

/* --- messages --- */

struct  _Protocol__PrpDlInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rnti;
  uint32_t rnti;
  protobuf_c_boolean has_harq_process_id;
  uint32_t harq_process_id;
  size_t n_harq_status;
  uint32_t *harq_status;
  protobuf_c_boolean has_serv_cell_index;
  uint32_t serv_cell_index;
};
#define PROTOCOL__PRP_DL_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_dl_info__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,0 }


struct  _Protocol__PrpUlInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rnti;
  uint32_t rnti;
  size_t n_ul_reception;
  uint32_t *ul_reception;
  protobuf_c_boolean has_reception_status;
  uint32_t reception_status;
  protobuf_c_boolean has_tpc;
  uint32_t tpc;
  protobuf_c_boolean has_serv_cell_index;
  uint32_t serv_cell_index;
};
#define PROTOCOL__PRP_UL_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__prp_ul_info__descriptor) \
    , 0,0, 0,NULL, 0,0, 0,0, 0,0 }


/* Protocol__PrpDlInfo methods */
void   protocol__prp_dl_info__init
                     (Protocol__PrpDlInfo         *message);
size_t protocol__prp_dl_info__get_packed_size
                     (const Protocol__PrpDlInfo   *message);
size_t protocol__prp_dl_info__pack
                     (const Protocol__PrpDlInfo   *message,
                      uint8_t             *out);
size_t protocol__prp_dl_info__pack_to_buffer
                     (const Protocol__PrpDlInfo   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpDlInfo *
       protocol__prp_dl_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_dl_info__free_unpacked
                     (Protocol__PrpDlInfo *message,
                      ProtobufCAllocator *allocator);
/* Protocol__PrpUlInfo methods */
void   protocol__prp_ul_info__init
                     (Protocol__PrpUlInfo         *message);
size_t protocol__prp_ul_info__get_packed_size
                     (const Protocol__PrpUlInfo   *message);
size_t protocol__prp_ul_info__pack
                     (const Protocol__PrpUlInfo   *message,
                      uint8_t             *out);
size_t protocol__prp_ul_info__pack_to_buffer
                     (const Protocol__PrpUlInfo   *message,
                      ProtobufCBuffer     *buffer);
Protocol__PrpUlInfo *
       protocol__prp_ul_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__prp_ul_info__free_unpacked
                     (Protocol__PrpUlInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protocol__PrpDlInfo_Closure)
                 (const Protocol__PrpDlInfo *message,
                  void *closure_data);
typedef void (*Protocol__PrpUlInfo_Closure)
                 (const Protocol__PrpUlInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    protocol__prp_harq_status__descriptor;
extern const ProtobufCEnumDescriptor    protocol__prp_reception_status__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_dl_info__descriptor;
extern const ProtobufCMessageDescriptor protocol__prp_ul_info__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_time_5fcommon_2eproto__INCLUDED */
